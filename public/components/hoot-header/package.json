{
  "name": "hoot-header",
  "version": "1.0.0",
  "description": "Web-Component developed for the site Header Element Group loosely coupled within a component shell container; Engineered for easy reusability  and interfacing grouped components loosely coupled together in a modular environment. I have found, at the end of research and development, that using Native Web Components which are wired with an independence and having their Stateindependently wired and interfaced solely with the store: the store being designed with only the State of the State as its sole reason of existence, that the application's \"Dependency Quota\" is held at a reasonable minimum. Streamlined effortlessly through its natural inherent membership within the \"BIG THREE\" (HTML, CSS, and JAVASCRIPT), Web-Components permit experiencing a flexibility and an environmental liberty that a virtual DOM or another dependency shackled framework didn't even know existed nor even perceived.  And to be sure,  if the equal aggressive research and study were given to the natural native architecture of Web Components and their pontential, as is put forth in learning frameworks and their ever overarching motivation to find the FORCE, the software industry would create the applications consumers truly beckoned for. Furthermore, the frameworks and their Yoda's who are forever teaching their shortcuts to glory, but often resulting in an \"Imposter Syndrome\" because the innocent developer never fully grasps how the CODE works. Notwithstanding, the Gurus continue promising the harnessing of the \"FORCE\"; always adding the motivating conceptual dream of every true developer with the proverbial accolade, \"may the FORCE be with you!\"  Certainly there is a FORCE! A powerful force which freely offers its capabilities to whomever will. This will being the heart of a true software engineer who is not seeking the frills of incessant pats upon the back for creating mediocre merchandise, but one that has his eyes stayed upon the prize of fully understanding the lightsaber he holds in his hands. A Developer who reasons, and rightly so, that if the same amplitude of energy were to be expended in learning his trade as that which he had expended in searching forevermore for the shortcuts, he could finally arrive at a place where the word engineer wouldn't foster guilt. And more, a creativeness and FORCE which would manifest superb quality software, deserving of the industry he claims to be a part of.The versatility and possibilities that Native Web-Components afford when properly wielded in the talented hands of a prepared developer, will in themselves generate a FORCE of creativeness and ingenuity. A FORCE that will affect the whole of humanity; even to the very fabric of their existence. A FORCE which brings the connectivity of the world into position, juxtapose perfectly causing a usable and dependable Union of its resources, the which results in the intuitive advancement of all things. Creatively designed software applications which become integrated in everything. The progressions cause and affect coalesces into a seemingly devine intervention which brings a revolutionary and reactionary change upon the earth. All because of JavaScript! Nah, I was just kidding. Actually, C#, Java, C++, JavaScript, PHP, CSS, HTML, Rust, Go, and not the least or definetly all, Haskell which brought us the controversial dynamo of Functional Programming. Hey, I believe Object Oriented Programming can do it. It works great with Web-Components and utilization of the \"Sugar Coated\" Classes we now find in JavaScript. Man that code is sweet. It leverages creativity with its style of application. Creating a Component Shell that houses the root Component with all of the inheritance bubbling throughout the design, and then its logic and flowering being encapsulated within the native secret place of the ShadowDOM. May the FORCE be with you!!!",
  "type": "module",
  "main": "hoot-header.js",
  "scripts": {
    "test": "jest"
  },
  "author": "Gordon R Mullen Jr",
  "license": "MIT"
}
